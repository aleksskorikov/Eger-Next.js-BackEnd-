// import multer from "multer";
// import path from "path";
// import fs from "fs";

// // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≥–¥–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è —Ñ–∞–π–ª—ã
// const uploadDir = path.resolve("./public/uploads"); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–ø–∫—É public –¥–ª—è Next.js

// // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏
// if (!fs.existsSync(uploadDir)) {
//     console.log("‚ö†Ô∏è –ü–∞–ø–∫–∞ uploads –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...");
//     fs.mkdirSync(uploadDir, { recursive: true });
// }

// // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
// fs.readdir(uploadDir, (err, files) => {
//     if (err) {
//         console.error("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏ uploads:", err);
//     } else {
//         console.log("üìÇ –§–∞–π–ª—ã –≤ uploads –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π:", files);
//     }
// });

// // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é multer
// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         console.log(`üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–ø–∫—É: ${uploadDir}`);
//         cb(null, uploadDir); // –£–∫–∞–∑—ã–≤–∞–µ–º, –∫—É–¥–∞ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–∞–π–ª
//     },
//     filename: (req, file, cb) => {
//         const uniqueSuffix = `${Date.now()}-${Math.round(Math.random() * 1e9)}`;
//         const ext = path.extname(file.originalname);
//         const filename = `${uniqueSuffix}${ext}`; // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
//         console.log(`‚úÖ –ò–º—è —Ñ–∞–π–ª–∞: ${filename}`);
//         cb(null, filename); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
//     }
// });

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è multer
// const upload = multer({ storage });

// export { upload };

// // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä Next.js –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
// export const config = {
//     api: {
//         bodyParser: false, // –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞—Ä—Å–µ—Ä
//     },
// };

// import { v4 as uuidv4 } from 'uuid'; // –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
// import fs from 'fs';
// import path from 'path';
// import multer from 'multer';

// const uploadDir = path.resolve('./public/uploads');

// // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
// if (!fs.existsSync(uploadDir)) {
//     console.log('‚ö†Ô∏è –ü–∞–ø–∫–∞ uploads –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...');
//     fs.mkdirSync(uploadDir, { recursive: true });
// }

// // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
// fs.readdir(uploadDir, (err, files) => {
//     if (err) {
//         console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏ uploads:', err);
//     } else {
//         console.log('üìÇ –§–∞–π–ª—ã –≤ uploads –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π:', files);
//     }
// });

// // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å multer
// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         console.log(`üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–ø–∫—É: ${uploadDir}`);
//         cb(null, uploadDir); // –£–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
//     },
//     filename: (req, file, cb) => {
//         const uniqueSuffix = `${Date.now()}-${Math.round(Math.random() * 1e9)}`;
//         const ext = path.extname(file.originalname);
//         const filename = `${uniqueSuffix}${ext}`;
//         console.log(`‚úÖ –ò–º—è —Ñ–∞–π–ª–∞: ${filename}`);
//         cb(null, filename); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
//     },
// });

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è multer
// const upload = multer({ storage });

// // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è bodyParser
// export const config = {
//     api: {
//         bodyParser: false, // –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä—Å–µ—Ä
//     },
// };

// export { upload };
